#Область ОбработчикиСобытий
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СформироватьДвиженияПоОкладу(); 
	СформироватьДвиженияПоУдержанию();
	СформироватьДвиженияПоВзаиморасчетам();
	
КонецПроцедуры
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции
Процедура СформироватьДвиженияПоОкладу()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_УсловияОплатыСотрудников.Период КАК Период,
	|	ВКМ_УсловияОплатыСотрудников.Оклад КАК Оклад,
	|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудников.Процент, 0) КАК Процент,
	|	ЕСТЬNULL(ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот, 0) КАК СуммаКОплатеОборот,
	|	ВКМ_УсловияОплатыСотрудников.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТ_СуммыКОплате
	|ИЗ
	|	РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(&ДатаНачала, &ДатаОкончания, Авто, ) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
	|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников КАК ВКМ_УсловияОплатыСотрудников
	|		ПО ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник = ВКМ_УсловияОплатыСотрудников.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_НачисленияЗарплатыНачисления.Сотрудник КАК Сотрудник,
	|	ВКМ_НачисленияЗарплатыНачисления.КатегорияСотрудника КАК КатегорияСотрудника,
	|	ВКМ_НачисленияЗарплатыНачисления.ВидРасчета КАК ВидРасчета,
	|	ВКМ_НачисленияЗарплатыНачисления.ДатаНачала КАК ДатаНачала,
	|	ВКМ_НачисленияЗарплатыНачисления.ДатаОкончания КАК ДатаОкончания,
	|	ВКМ_НачисленияЗарплатыНачисления.ГрафикРаботы КАК ГрафикРаботы,
	|	ВТ_СуммыКОплате.Оклад КАК Оклад,
	|	ЕСТЬNULL(ВТ_СуммыКОплате.СуммаКОплатеОборот, 0) КАК СуммаКОплате,
	|	ЕСТЬNULL(ВТ_СуммыКОплате.Процент, 0) КАК Процент
	|ИЗ
	|	ВТ_СуммыКОплате КАК ВТ_СуммыКОплате
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВКМ_НачисленияЗарплаты.Начисления КАК ВКМ_НачисленияЗарплатыНачисления
	|		ПО (ВКМ_НачисленияЗарплатыНачисления.Сотрудник = ВТ_СуммыКОплате.Сотрудник)
	|ГДЕ
	|	ВКМ_НачисленияЗарплатыНачисления.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Дата)); 
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		Если Выборка.ГрафикРаботы = Неопределено Тогда 
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст =СтрШаблон("Не заполнены данные графика!");
			Сообщение.Сообщить();							
			
		КонецЕсли; 
		
		Если Выборка.Оклад = 0 Тогда 
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон("Для сотрудника %1 не установлен оклад",Выборка.Сотрудник);
			Сообщение.Сообщить();
			
		КонецЕсли;
		
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.ВидРасчета = Выборка.ВидРасчета;
		Движение.ПериодДействияНачало = Выборка.ДатаНачала;
		Движение.ПериодДействияКонец = Выборка.ДатаОкончания;
		Движение.ПериодРегистрации = Дата;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.КатегорияСотрудника = Выборка.КатегорияСотрудника;
		Движение.ГрафикРаботы = Выборка.ГрафикРаботы;
		Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
		Движение.БазовыйПериодКонец = КонецМесяца(Дата);
		Движение.Показатель = Выборка.Оклад; 
		Движение.Регистратор = ЭтотОбъект;
		
		Если Выборка.Процент > 0 Тогда
			
			СуммаКНачислению = Выборка.Оклад + (Выборка.СуммаКОплате * Выборка.Процент / 100);
			Движение.Сумма = СуммаКНачислению; 
			//НДФЛ = Окр(Движение.Сумма * 0.13, 2);
			
		Иначе 
			
			Движение.Сумма = Выборка.Оклад;
			//НДФЛ = Окр(Движение.Сумма * 0.13, 2);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	
	Для Каждого Движение Из Движения.ВКМ_ОсновныеНачисления Цикл  
		
		Если Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад Тогда
			
			План = Движение.ПолучитьДанныеГрафика(ВидПериодаРегистраРасчета.ПериодДействия);
			Факт = Движение.ПолучитьДанныеГрафика(ВидПериодаРегистраРасчета.ФактическийПериодДействия);
			
			Если План.Количество() = 0 ИЛИ Факт.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Результат = Движение.Сумма / План[0].РабочихДней * Факт[0].РабочихДней;			
			Движение.Сумма = Результат;
			//НДФЛ = Окр(Движение.Сумма * 0.13, 2); 
			
		Иначе
			Продолжить;
		КонецЕсли; 
	КонецЦикла;      
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
	
КонецПроцедуры 

Процедура СформироватьДвиженияПоУдержанию() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.КатегорияСотрудника КАК КатегорияСотрудника,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сумма КАК Сумма,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.Показатель КАК Показатель,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ГрафикРаботы КАК ГрафикРаботы,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ПериодРегистрации КАК ПериодРегистрации,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.БазовыйПериодНачало КАК БазовыйПериодНачало,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.БазовыйПериодКонец КАК БазовыйПериодКонец
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(ВидРасчета = &ВидРасчета) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	|ГДЕ
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.Регистратор = &Ссылка
	|	И ВКМ_ОсновныеНачисленияДанныеГрафика.ПериодРегистрации МЕЖДУ &ДатаНачала И &ДатаОкончания";
	
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Дата));
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл  
		НДФЛ = Окр(Выборка.Сумма * 0.13, 2);
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.Сотрудник = Выборка.Сотрудник; 
		Движение.КатегорияСотрудника = Выборка.КатегорияСотрудника;
		Движение.ПериодРегистрации = Выборка.ПериодРегистрации;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		Движение.СуммаНДФЛ = НДФЛ;
		Движение.Регистратор = ЭтотОбъект; // Ссылка на текущий документ  
		Движение.Показатель = Выборка.Сумма;
		Движение.БазовыйПериодНачало = Выборка.БазовыйПериодНачало;
		Движение.БазовыйПериодКонец = Выборка.БазовыйПериодКонец;
	КонецЦикла;
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры	    

Процедура СформироватьДвиженияПоВзаиморасчетам() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ВКМ_ОсновныеНачисления.Сумма КАК Сумма,
		|	ВКМ_ОсновныеНачисления.ВидРасчета КАК ВидРасчета
		|ПОМЕСТИТЬ ВТ_ОснНач
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_Удержания.Сотрудник КАК Сотрудник,
		|	ВКМ_Удержания.СуммаНДФЛ КАК СуммаНДФЛ
		|ПОМЕСТИТЬ ВТ_Удержания
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		|ГДЕ
		|	ВКМ_Удержания.Регистратор = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ОснНач.Сотрудник КАК Сотрудник,
		|	ВТ_ОснНач.Сумма - ВТ_Удержания.СуммаНДФЛ КАК ИтоговаяСумма,
		|	ВТ_ОснНач.ВидРасчета КАК ВидРасчета
		|ИЗ
		|	ВТ_ОснНач КАК ВТ_ОснНач
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Удержания КАК ВТ_Удержания
		|		ПО ВТ_ОснНач.Сотрудник = ВТ_Удержания.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить(); 
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход; 
		Движение.ВидРасчета = Выборка.ВидРасчета;
       	Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Сумма = Выборка.ИтоговаяСумма;
		Движение.Период = Дата;
	КонецЦикла;                      
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();

КонецПроцедуры	
#КонецОбласти